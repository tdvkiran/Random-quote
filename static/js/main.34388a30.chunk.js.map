{"version":3,"sources":["component/Card/Card.module.css","axios/axios.js","component/Card/Card.jsx","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","axiosInstance","axios","create","baseURL","Card","useState","quote","setQuote","useEffect","fetchQuote","a","get","data","content","author","alert","className","styles","container","button","onClick","event","preventDefault","App","card","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,mBAAmB,+BAA+B,OAAS,qBAAqB,OAAS,uB,4JCI5JC,E,OAHOC,EAAMC,OAAO,CAC/BC,QAAS,mC,uBC0CEC,EAxCF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAU,uCAAG,kCAAAC,EAAA,+EAILT,EAAMU,MAJD,oBAGbC,KAAQC,EAHK,EAGLA,QAASC,EAHJ,EAGIA,OAEnBP,EAAS,CAAEM,UAASC,WALL,kDAOfC,MAAM,yBAPS,0DAAH,qDAehB,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACGZ,EACC,qCACE,mBAAGU,UAAWC,IAAOX,MAArB,SAA6BA,EAAMO,UACnC,oBAAGG,UAAWC,IAAOH,OAArB,eAAgCR,EAAMQ,aAGxC,aAGF,wBAAQE,UAAWC,IAAOE,OAAQC,QAhBhB,SAACC,GACrBA,EAAMC,iBACNb,KAcE,2B,gBCnBSc,E,4JAXb,WACE,OACE,qBAAKP,UAAYC,IAAOC,UAAxB,SACE,qBAAKF,UAAWC,IAAOO,KAAvB,SACE,cAAC,EAAD,Y,GAPQC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K,kBCbA7B,EAAOC,QAAU,CAAC,UAAY,uBAAuB,KAAO,qB","file":"static/js/main.34388a30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2GhDU\",\"quote\":\"Card_quote__1xY0n\",\"button-conatiner\":\"Card_button-conatiner__1Pht1\",\"author\":\"Card_author__11loI\",\"button\":\"Card_button__1zTYc\"};","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: \"https://api.quotable.io/random\"\n});\nexport default axiosInstance;","import React, { useState, useEffect } from \"react\";\n\nimport axios from \"../../axios/axios\";\nimport styles from \"./Card.module.css\";\n\nconst Card = () => {\n  const [quote, setQuote] = useState(\"\");\n\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  const fetchQuote = async () => {\n    try {\n      const {\n        data: { content, author },\n      } = await axios.get();\n      setQuote({ content, author });\n    } catch (err) {\n      alert('service not available');\n    }\n  };\n  const handleOnClick = (event) => {\n    event.preventDefault();\n    fetchQuote();\n  };\n\n  return (\n    <div className={styles.container}>\n      {quote ? (\n        <>\n          <p className={styles.quote}>{quote.content}</p>\n          <p className={styles.author}>- {quote.author}</p>\n        </>\n      ) : (\n        \"Loading...\"\n      )}\n\n      <button className={styles.button} onClick={handleOnClick}>\n        New Quote\n      </button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Card from './component/Card/Card'\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n\n\n  render() {\n    return (\n      <div className={ styles.container}>\n        <div className={styles.card}>\n          <Card />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"card\":\"App_card__3tefE\"};"],"sourceRoot":""}